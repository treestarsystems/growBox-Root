#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
var argv = require('minimist')(process.argv.slice(2));
const core = require('./gbRootCore.js');
var gbSystem = require('../../system_confs/system_vars.json');
//This is a lightly modified version of the selfsigned project.
//Source: https://github.com/jfromaniello/selfsigned
var selfsigned = require('./selfsigned.js');

function generateRootCert() {
	selfsigned.generate(core.coreVars.certAttrs, function (err, pems) {
		if (err) throw err;

		if (!fs.existsSync(`${core.coreVars.systemConfsDir}/certs`)){
			core.createDir (`${core.coreVars.systemConfsDir}/certs`);
		}

		certObject = {"private": pems.private, "public": pems.public, "cert": pems.cert, "pem": `${pems.private}${pems.cert}`};
		console.log (certObject.cert);

		fs.writeFile(`${core.coreVars.systemConfsDir}/certs/gbRootCert.json`, JSON.stringify(certObject), (err) => {
			if (err) throw err;
		});

		console.log(certObject.pem);
		fs.writeFile(`${core.coreVars.systemConfsDir}/certs/gbRootCert.pem`, certObject.pem, (err) => {
			if (err) throw err;
		});
	});
}

function generateClientCert(clientId) {
	fs.readFile(`${core.coreVars.systemConfsDir}/certs/gbRootCert.json`, 'utf8', (error,data) => {
		if (error) {
			return {"status": "growBox-Root CA does not exist. Please create a growBox-Root CA first"};
		}

		var caData = JSON.parse(data);
		var pems = selfsigned.generate(core.coreVars.certAttrs, {
			clientCertificate: true,
			clientCertificateCN: `${clientId}.${gbSystem.systemDomain}`,
			keyPair: {
				//Require the key file data that is generated by the root cert creation
				publicKey: caData.public,
				privateKey: caData.private
			}
		 });

		certObject = {"clientprivate": pems.clientprivate, "clientpublic": pems.clientpublic, "clientcert": pems.clientcert};
		console.log (pems.clientprivate,pems.clientpublic,pems.clientcert);
	});
}

function readRootCert() {
	var certObject = {};
	if (fs.existsSync(`${core.coreVars.systemConfsDir}/certs/gbRootCert.json`)) {
		var gbRootCert = require(`${core.coreVars.systemConfsDir}/certs/gbRootCert.json`);
		certObject = {"cert": gbRootCert.cert};
		console.log(certObject);
	}
	return certObject;
/*
	fs.access(`${core.coreVars.systemConfsDir}/certs/gbRootCert.json`, error => {
		if (!error) {
			var gbRootCert = require(`${core.coreVars.systemConfsDir}/certs/gbRootCert.json`);
			certObject = {"cert": gbRootCert.cert};
			console.log(JSON.stringify({"cert": gbRootCert.cert}));
		} else {
			console.log("growBox-Root CA does not exist. Please create a growBox-Root CA first");
			certObject = {"cert": "growBox-Root CA does not exist. Please create a growBox-Root CA first"};
		}
	});
//	console.log(certObject);
*/
}

if (argv.r) {
	console.log('Generating Root Certificate\n');
	generateRootCert();
}

if (argv.t) {
//	console.log('Generating Root Certificate\n');
	readRootCert();
}

if (argv.c) {
	console.log('Generating Client Certificate\n');
	if (argv.c[0]) {
		generateClientCert(argv.c);
	} else {
		generateClientCert(`gbdevice-${core.genRegular(5).toLowerCase()}`);
	}
}

/*
module.exports = {
	generateRootCert,
	generateClientCert,
	readRootCert,
	attrs
};
*/
